name: Docker Build and Push

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  Build_with_docker_file_and_push_Docker_image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Extract version and app file name from pom.xml
        id: extract_version
        run: |
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          if [ -z "$VERSION" ]; then
            echo "Version not found!"
            exit 1
          fi
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "JAR_FILE=HouseManagement-$VERSION.jar" >> $GITHUB_ENV
          echo "Version: $VERSION and file $JAR_FILE"

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven and run tests
        run: mvn -B package --file pom.xml

      - name: Create Dockerfile dynamically
        id: create_dockerfile
        run: |
          echo "# Build stage" > Dockerfile
          echo "FROM maven:3.8.3-openjdk-17 AS build" >> Dockerfile
          echo "COPY src /home/app/src" >> Dockerfile
          echo "COPY pom.xml /home/app" >> Dockerfile
          echo "RUN mvn -f /home/app/pom.xml clean package" >> Dockerfile
          echo "" >> Dockerfile
          echo "# Run stage" >> Dockerfile
          echo "FROM openjdk:17" >> Dockerfile
          echo "ARG JAR_FILE" >> Dockerfile
          echo "COPY --from=build /home/app/target/\${env.JAR_FILE} /usr/local/lib/\${env.JAR_FILE}" >> Dockerfile
          echo "EXPOSE 8080" >> Dockerfile
          echo 'ENTRYPOINT ["sh", "-c", "java -jar /usr/local/lib/\${env.JAR_FILE}"]' >> Dockerfile
      

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Debug - Echo version
        run: |
         echo "Version is ${{ steps.get_version.outputs.current_version }}"
         echo "JAR file is ${{ env.JAR_FILE }}"
        

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          build-args: |
            JAR_FILE=${{ env.JAR_FILE }}
          tags: |
            guestas/housemanagement:${{ env.VERSION }}
            guestas/housemanagement:latest

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Deploy with Docker Compose
        run: |
          docker-compose -f docker-compose-house.yml up -d


