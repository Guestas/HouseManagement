# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml

         # Set up environment file
    - name: Set environment variables
      run: echo "OUTPUT_VAR=value" >> $GITHUB_ENV

        
    # Read environment file in another step
    - name: Read environment variables
      run: |
        echo "Output variable is $OUTPUT_VAR"

#docker setting
    - name: Checkout
      uses: actions/checkout@v4
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        version: "lab:latest"
        driver: cloud
        endpoint: "guestas/test"
    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: .
        tags: "image"
        # For pull requests, export results to the build cache.
        # Otherwise, push to a registry.
        outputs: ${{ github.event_name == 'pull_request' && 'type=cacheonly' || 'type=registry,push=true' }}
  
